"""Initial migration

Revision ID: ca3fa145ab2e
Revises: 
Create Date: 2024-07-11 00:25:39.321001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ca3fa145ab2e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('black_cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('pick', sa.Integer(), nullable=False),
    sa.Column('watermark', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('card_set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('white_cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('watermark', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ai_personalities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('card_set_black_card',
    sa.Column('card_set_id', sa.Integer(), nullable=False),
    sa.Column('black_card_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['black_card_id'], ['black_cards.id'], ),
    sa.ForeignKeyConstraint(['card_set_id'], ['card_set.id'], ),
    sa.PrimaryKeyConstraint('card_set_id', 'black_card_id')
    )
    op.create_table('card_set_white_card',
    sa.Column('card_set_id', sa.Integer(), nullable=False),
    sa.Column('white_card_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['card_set_id'], ['card_set.id'], ),
    sa.ForeignKeyConstraint(['white_card_id'], ['white_cards.id'], ),
    sa.PrimaryKeyConstraint('card_set_id', 'white_card_id')
    )
    op.create_table('game_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ai_personality_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ai_personality_id'], ['ai_personalities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_session_id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('black_card_id', sa.Integer(), nullable=False),
    sa.Column('user_score', sa.Integer(), nullable=False),
    sa.Column('ai_score', sa.Integer(), nullable=False),
    sa.Column('winner', sa.String(), nullable=False),
    sa.Column('judge_explanation', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['black_card_id'], ['black_cards.id'], ),
    sa.ForeignKeyConstraint(['game_session_id'], ['game_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('card_plays',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('user_card_id', sa.Integer(), nullable=False),
    sa.Column('ai_card_id', sa.Integer(), nullable=False),
    sa.Column('play_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ai_card_id'], ['white_cards.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['game_rounds.id'], ),
    sa.ForeignKeyConstraint(['user_card_id'], ['white_cards.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('card_plays')
    op.drop_table('game_rounds')
    op.drop_table('game_sessions')
    op.drop_table('card_set_white_card')
    op.drop_table('card_set_black_card')
    op.drop_table('ai_personalities')
    op.drop_table('white_cards')
    op.drop_table('users')
    op.drop_table('card_set')
    op.drop_table('black_cards')
    # ### end Alembic commands ###
